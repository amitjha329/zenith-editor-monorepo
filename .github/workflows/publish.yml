name: 📦 Publish to NPM

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease

jobs:
  publish:
    name: 🚀 Build and Publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔧 Build package
        run: pnpm build:package

      - name: 🧪 Run tests
        run: pnpm test

      - name: 🏷️ Version bump (if manual trigger)
        if: github.event_name == 'workflow_dispatch'
        run: |
          cd packages/zenith-editor
          pnpm version ${{ github.event.inputs.version }} --no-git-tag-version
          echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: 🏷️ Extract version from tag
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "NEW_VERSION=$TAG_VERSION" >> $GITHUB_ENV
          cd packages/zenith-editor
          pnpm version $TAG_VERSION --no-git-tag-version

      - name: 📝 Update package.json version
        run: |
          echo "Publishing version: $NEW_VERSION"
          
      - name: 🚀 Publish to NPM
        run: |
          cd packages/zenith-editor
          pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 🏷️ Create Git tag (if manual trigger)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add packages/zenith-editor/package.json
          git commit -m "chore: bump version to v$NEW_VERSION"
          git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
          git push origin main --tags

      - name: 📋 Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.NEW_VERSION }}
          release_name: 🚀 Zenith Editor v${{ env.NEW_VERSION }}
          body: |
            ## 🎉 What's New in v${{ env.NEW_VERSION }}
            
            ### ✨ Features
            - Enhanced image resizing with interactive handles
            - Improved SSR compatibility for Next.js applications
            - Better TypeScript support and type definitions
            
            ### 🐛 Bug Fixes
            - Fixed hydration mismatches in SSR environments
            - Resolved image resize event handling issues
            - Improved NodeViewWrapper integration
            
            ### 📦 Installation
            ```bash
            npm install zenith-editor@${{ env.NEW_VERSION }}
            # or
            pnpm add zenith-editor@${{ env.NEW_VERSION }}
            # or
            yarn add zenith-editor@${{ env.NEW_VERSION }}
            ```
            
            ### 📚 Documentation
            - [API Reference](https://github.com/amitjha329/zenith-editor-monorepo/blob/main/packages/zenith-editor/README.md)
            - [Migration Guide](https://github.com/amitjha329/zenith-editor-monorepo/blob/main/docs/migration.md)
            
            **Full Changelog**: https://github.com/amitjha329/zenith-editor-monorepo/compare/v${{ env.PREVIOUS_VERSION }}...v${{ env.NEW_VERSION }}
          draft: false
          prerelease: ${{ contains(env.NEW_VERSION, 'alpha') || contains(env.NEW_VERSION, 'beta') || contains(env.NEW_VERSION, 'rc') }}

  notify:
    name: 📢 Notify Success
    runs-on: ubuntu-latest
    needs: publish
    if: success()
    steps:
      - name: 📢 Success notification
        run: |
          echo "🎉 Successfully published zenith-editor@${{ env.NEW_VERSION }} to NPM!"
          echo "📦 Package: https://www.npmjs.com/package/zenith-editor"
          echo "🏷️ Release: https://github.com/amitjha329/zenith-editor-monorepo/releases/tag/v${{ env.NEW_VERSION }}"
